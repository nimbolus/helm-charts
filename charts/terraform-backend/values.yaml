# Default values for terraform-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/nimbolus/terraform-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

deployment:
  updateStrategy:
    type: RollingUpdate
  probeScheme: HTTP

env:
  LOG_LEVEL: info
  STORAGE_BACKEND: fs
  STORAGE_FS_DIR: /states
  KMS_BACKEND: local
  LOCK_BACKEND: redis
  AUTH_BASIC_ENABLED: "true"
  # TLS_KEY: /var/run/secrets/tls/tls.key
  # TLS_CERT: /var/run/secrets/tls/tls.crt

envValueFrom: {}
  # KMS_KEY:
  #   secretKeyRef:
  #     name: terraform-backend-kms-key
  #     key: kms-key

persistence:
  enabled: false
  accessModes:
    - ReadWriteOnce
  size: 10G

extraVolumes: []
  # - name: tls
  #   secret:
  #     secretName: terraform-backend-tls

extraVolumeMounts: []
  # - name: tls
  #   mountPath: /var/run/secrets/tls
  #   readOnly: true

hostAliases: []
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"

redis:
  enabled: true
  architecture: standalone
  global:
    password: secret
